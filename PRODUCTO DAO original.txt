package com.example.starwaska.dao

import android.annotation.SuppressLint
import android.content.ContentValues
import android.content.Context
import android.database.Cursor
import com.example.starwaska.recyclerCategoria.Producto

class ProductoDAO(context: Context) {

    val dbHelper: DataBaseProducto = DataBaseProducto(context)

    fun insertarProd(categoria: String,
                 nombre: String,
                 descripcion: String,
                 precio: Double,
                 descuento: Double,
                 imagen: String,
                 clickeado: Boolean): Long {

        val indice: Long
        val values = ContentValues().apply {
            put("categoria", categoria)
            put("nombre", nombre)
            put("descripcion", descripcion)
            put("precio", precio)
            put("descuento", descuento)
            put("imagen", imagen)
            put("clickeado", clickeado)
        }
        val db = dbHelper.writableDatabase
        try {
            indice = db.insert("Producto",null, values)
            return indice
        } catch (e: Exception) {
            throw DAOException("ProductoDAO: Error al insertar: " + e.message)
        } finally {
            db.close()
        }
    }



    @SuppressLint("Range")
    fun obtener(categ: String): List<Producto>  {
        val db = dbHelper.readableDatabase
        val lista = mutableListOf<Producto>()
        try {
            val c: Cursor = db.rawQuery("select * from " + "Producto" + " where categoria = '" + categ + "'", null)
            if (c.count > 0) {
                c.moveToFirst()
                do {
                    //val id: Int = c.getInt(c.getColumnIndexOrThrow("id"))
                    val categoria: String = c.getString(c.getColumnIndexOrThrow("categoria"))
                    val nombre: String = c.getString(c.getColumnIndexOrThrow("nombre")).replace("\\n", "\n")
                    val descripcion: String = c.getString(c.getColumnIndexOrThrow("descripcion"))
                    val precio: Double = c.getDouble(c.getColumnIndexOrThrow("precio"))
                    val descuento: Double = c.getDouble(c.getColumnIndexOrThrow("descuento"))
                    val imagen: String = c.getString(c.getColumnIndexOrThrow("imagen"))
                    val clickeado: Boolean = c.getInt(c.getColumnIndexOrThrow("clickeado")) == 1
                    var modelo = Producto(categoria, nombre, descripcion, precio, descuento, imagen, clickeado)
                    lista.add(modelo)
                } while (c.moveToNext())
            }
            c.close()
        } catch (e: Exception) {
            throw DAOException("DAO: Error al obtener: " + e.message)
        } finally {
            db.close()
        }
        return lista
    }

    fun eliminar(id: Int) {
        val db = dbHelper.writableDatabase
        try {
            val args = arrayOf(id.toString())
            db.execSQL("DELETE FROM " + "Producto" + " WHERE id=?", args)
        } catch (e: Exception) {
            throw DAOException("DAO: Error al eliminar: " + e.message)
        } finally {
            db.close()
        }
    }

}